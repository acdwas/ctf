
#include <stdio.h>
#include <string.h>

unsigned char nap[] = { 0x5a, 0x3d, 0xcc, 0x27, 0x17, 0x8b, 0xea, 0xdd, 0xf1, 0x42, 0x7f, 0x80, 0xf0, 0x5a, 0x50, 0x82, 0xe5, 0x6e, 0xdf, 0xab, 0xf2, 0xe5, 0x35, 0x76, 0x03, 0xa7, 0x4a, 0xf6, 0xf3, 0xfd, 0x1a, 0x74, 0xb3, 0xcc, 0x4d, 0xa6, 0x41, 0x29, 0x78, 0xd0, 0x42, 0x8e, 0x32, 0x26, 0xb1, 0x73, 0x28, 0x52, 0x38, 0xf8, 0x4d, 0x6e, 0x79, 0xd1, 0x35, 0xbe, 0x3b, 0x5f, 0x07, 0x98, 0x8a, 0x2c, 0x2f, 0xca, 0x41, 0xed, 0x39, 0x10, 0x38, 0x3c, 0x0c, 0xae, 0x03, 0x63, 0x0b, 0x36, 0x89, 0x4f, 0x24, 0xfc, 0xd5, 0xdb, 0x89, 0xb7, 0xed, 0xe7, 0x85, 0x19, 0xee, 0x84, 0x8e, 0x2f, 0x67, 0xcb, 0xaa, 0xd3, 0xea, 0x77, 0xef, 0x32, 0x07, 0x90, 0x6a, 0x2b, 0xe9, 0x14, 0xe4, 0x04, 0x8e, 0xdf, 0x4e, 0xd7, 0x34, 0x58, 0xe1, 0x2b, 0x33, 0xc8, 0x8b, 0x00, 0xda, 0xdc, 0x6f, 0x04, 0x54, 0x03, 0x21, 0xd3, 0xcf, 0xa5, 0x87, 0x0b, 0xfc, 0x6d, 0x0c, 0x0b, 0x26, 0xb1, 0x63, 0x0f, 0x72, 0xb2, 0x42, 0xdc, 0xe3, 0x89, 0x01, 0x4b, 0x1f, 0xe4, 0x0d, 0x40, 0x39, 0x55, 0x6e, 0x4f, 0x4b, 0xe7, 0x2c, 0x93, 0x41, 0xf8, 0xdd, 0xf8, 0x5e, 0x1c, 0xd0, 0xb8, 0x67, 0x49, 0xbe, 0xf7, 0x2c, 0xae, 0x92, 0x64 };

unsigned char buf[] = { 0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16 };

unsigned char tmp[32] = {0x00}; 

void fun(unsigned char *a1, unsigned char *a2, int a3){

    int v3, v4, v5, x, i;

    v3 = 16 * a3;
    v4 = x = 0;
    while ( v4 != 4 )
    {
        ++v4;
        v5 = v3;
        for ( i = 0; i != 4; ++i )
            a1[i + x] ^= a2[v5++];
        v3 += 4;
        x += 4;
    }
}

unsigned char flag[] = { 0x47, 0xc4, 0xd8, 0x3d, 0x9e, 0x69, 0xc9, 0x97, 0xdf, 0x9a, 0x46, 0x54, 0xa7, 0x0d, 0x78, 0xf6, 0xad, 0xba, 0xb4, 0x76, 0xd5, 0xb2, 0x6f, 0xa2, 0x21, 0x45, 0xa6, 0xc3, 0x94, 0xd4, 0x58, 0x15 };

unsigned char check[32];

int main(void){
    int i, j, ii, xx;
    unsigned char al, cl, dl;

    unsigned char tmp1[33]; // = "wsc{s4f3_4nd_s0und}";

    scanf("%32s", tmp1);    

    j = strlen(tmp1);

    for(i=j;i<32;i++)
        tmp1[i] = 0x04;

    for(xx=0;xx<=16;xx+=16){

        for(i=0;i<16;i++)
            tmp[i] ^= tmp1[i+xx];

        fun(tmp, nap, 0);

        for ( ii = 1LL; ; ++ii ){

            for(i=0;i<4;i++)
                for(j=0;j<4;j++)
                    tmp[j*4+i] = buf[tmp[j*4+i]];

            al = tmp[0x5];
            cl = tmp[0x1];
            dl = tmp[0x2];
            tmp[0x1] = al;
            al = tmp[0x9];
            tmp[0x5] = al;
            al = tmp[0xd];
            tmp[0x9] = al;
            tmp[0xd] = cl;
            al = tmp[0xa];
            tmp[0x2] = al;
            tmp[0xa] = dl;
            al = tmp[0x6];
            cl = tmp[0xe];
            tmp[0x6] = cl;
            tmp[0xe] = al;
            al = tmp[0x3];
            cl = tmp[0xf];
            tmp[0x3] = cl;
            cl = tmp[0xb];
            tmp[0xf] = cl;
            cl = tmp[0x7];
            tmp[0xb] = cl;
            tmp[0x7] = al;

            unsigned char v47, v48, v49, v50, v51;
            int mm;
            
            if ( ii == 10 )
                break;

            for ( mm = 0; mm != 4; ++mm ){
                v47 = tmp[4 * mm];
                v48 = tmp[4 * mm + 1];
                v49 = tmp[4 * mm + 2];
                v50 = v49 ^ v47 ^ v48;
                v51 = tmp[4 * mm + 3];
                tmp[4 * mm] = v51 ^ v50 ^ ((char)(v47 ^ v48) >> 7) & 0x1B ^ v47 ^ (2 * (v47 ^ v48));
                tmp[4 * mm + 1] = ((char)(v48 ^ v49) >> 7) & 0x1B ^ v51 ^ v50 ^ v48 ^ (2 * (v48 ^ v49));
                tmp[4 * mm + 2] = ((char)(v49 ^ v51) >> 7) & 0x1B ^ (2 * (v49 ^ v51)) ^ v51 ^ v47 ^ v48;
                tmp[4 * mm + 3] = ((char)(v47 ^ v51) >> 7) & 0x1B ^ v50 ^ (2 * (v47 ^ v51));
            }

            fun(tmp, nap, ii);

    }

    fun(tmp, nap, 10);

    for(i=0;i<16;i++)
        check[i+xx] = tmp[i];

    }
    for(i=0;i<32;i++){
        if(flag[i] != check[i]){
            printf("No.\n", check[i]);
            return 1;
        }
    }

    printf("Flag: %s\n", tmp1);

    return 0;
}


// wsc{s4f3_4nd_s0und}
